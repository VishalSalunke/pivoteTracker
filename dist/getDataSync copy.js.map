{"version":3,"sources":["../src/getDataSync copy.js"],"names":["getAllStoriesArray","projectId","retries","Promise","resolve","reject","client","project","stories","all","error","code","iterateOverAllStories","storyId","story","get","getCommentsOfstory","comments","donwloadFile","attachment","storyDir","filename","trim","replace","id","download","console","log","createPDF","storyData","doc","PDFDocument","pipe","fs","createWriteStream","fontSize","text","owner","moveDown","name","description","length","addPage","i","commentBy","imagePath","j","image","width","end","totalStoriesDone","totalStoriesAvailable","toFixed","extractAllData","projects","getAllStoriesArraySync","iterateOverAllStoriesSync","getCommentsOfstorySync","donwloadFileSync","undefined","baseDir","projectDir","mkdirSync","recursive","storyJson","writeFileSync","members","ownedById","username","k","comment","personId","email","fileAttachments","l","res","contentType","indexOf","push","getprojects","getAllPivotTrackerData","account","memberships","forEach","member"],"mappings":"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","file":"getDataSync copy.js","sourcesContent":["import  Promise from 'promise'\nimport fs from 'fs'\nimport { client } from './index'\nimport PDFDocument from 'pdfkit'\nimport sp from 'synchronized-promise'\n\n function getAllStoriesArray(projectId, retries=5){\n  return new Promise(function (resolve,reject) {\n    client.project(projectId).stories.all(function (error,stories) {\n      if(error && (error.code === \"ETIMEDOUT\" || error.code === \"ECONNRESET\") && retries > 0){\n        getAllStoriesArray(projectId, retries-1)\n      }else if(!error){\n        resolve(stories)\n      }\n      else{\n        reject(error)\n      }\n    })\n  })\n}\n\nfunction iterateOverAllStories(projectId, storyId, retries=5){\n  return new Promise((resolve,reject) => {\n    client.project(projectId).story(storyId).get(function(error, story) {\n      if(error && (error.code === \"ETIMEDOUT\" || error.code === \"ECONNRESET\") && retries > 0){\n        getAllStoriesArray(projectId, retries-1)\n      }else if(!error){\n        resolve(story)\n      }\n      else{\n        reject(error)\n      }\n  });\n  })\n}\n\nfunction getCommentsOfstory(projectId, storyId, retries=5){\n  return new Promise((resolve,reject) => {\n    client.project(projectId).story(storyId).comments.all(function(error, comments) {\n      if(error && (error.code === \"ETIMEDOUT\" || error.code === \"ECONNRESET\") && retries > 0){\n        getAllStoriesArray(projectId, retries-1)\n      }else if(!error){\n        resolve(comments)\n      }\n      else{\n        reject(error)\n      }\n  });\n  })\n}\n\nfunction donwloadFile(attachment, storyDir, retries=3) {\n  return new Promise((resolve,reject) => {\n    let filename = attachment.filename.trim().replace(/ /g,\"_\")\n    client.attachment(attachment.id).download(`${storyDir}/${filename}`, function(error) {\n      if (error && retries > 0) {\n        donwloadFile(attachment, storyDir,  retries-1)\n      } else if(!error) {\n          console.log(`Download success - ${storyDir}/${attachment.filename}`)\n          resolve(`${storyDir}/${filename}`)\n      } else{\n        reject(error)\n      }\n    });\n  })\n}\n\nfunction createPDF(filename, storyData){\n  const doc = new PDFDocument()\n  doc.pipe(fs.createWriteStream(filename))\n\n  doc\n  .fontSize(20)\n  .text(`Story -> ${storyData.story.id} Owner->${storyData.owner} Project ID -> ${storyData.story.projectId}`)\n\n  doc.moveDown();\n  doc\n  .fontSize(32)\n  .text(storyData.story.name)\n\n  doc.moveDown();\n  doc\n  .fontSize(25)\n  .text(`Description  -> ${storyData.story.description}`)\n\n  if(storyData.comments.length > 0){\n    doc\n      .addPage()\n      .fontSize(27)\n      .text(`Story -> ${storyData.story.id} -> Comments`)\n\n      for(let i=0; i<storyData.comments.length; i++ ){\n        doc.moveDown()\n        doc\n        .fontSize(25)\n        .text(`${storyData.comments[i].commentBy} -> ${storyData.comments[i].text} `)\n\n        if(storyData.comments[i].imagePath.length > 0){\n          for(let j=0; j<storyData.comments[i].imagePath.length; j++){\n           try {\n            doc.moveDown()\n            doc.image(storyData.comments[i].imagePath[j],{width: 400})\n            console.log(`story has image-${storyData.story.id}`)\n            console.log(storyData.comments[i].imagePath[j])\n           } catch (error) {\n            console.log(\"can not insert image\")\n            console.log(storyData.comments[i].imagePath[j])\n           }\n          }\n        }\n      }\n  }\n  doc.end();\n  console.log(`***** Process  ${ (100 * totalStoriesDone / totalStoriesAvailable).toFixed(2)}% completed ************** total stories ${totalStoriesAvailable}`)\n}\n\nlet totalStoriesAvailable = 0\nlet totalStoriesDone = 0\nfunction extractAllData(projects){\n  console.log(\"Total projects -> \",projects.length)\n\n  const getAllStoriesArraySync = sp(getAllStoriesArray)\n  const iterateOverAllStoriesSync = sp(iterateOverAllStories)\n  const getCommentsOfstorySync = sp(getCommentsOfstory)\n  const donwloadFileSync = sp(donwloadFile)\n\n  for(let i=0; i<projects.length; i++){\n    if(projects[i].id !== null){\n\n      const stories = getAllStoriesArraySync(projects[i].id)\n\n        totalStoriesAvailable = totalStoriesAvailable + stories.length\n        for(let j=0; j<stories.length; j++){\n          if(stories[j].id !== null && stories[j].id !== undefined){\n\n\n            const story = iterateOverAllStoriesSync(projects[i].id, stories[j].id)\n\n                if(story && story.id !== null && story.id !== undefined){\n                  totalStoriesDone++\n\n                  const comments = getCommentsOfstorySync(projects[i].id, story.id)\n\n                   let storyData = {}\n                   storyData.story = story\n                   storyData.comments = []\n                   let baseDir = 'pivoteTrackerData'\n                   let projectDir = `${baseDir}/${projects[i].id}-${projects[i].name}`\n                   let storyDir = `${projectDir}/${story.id}`\n                   fs.mkdirSync(projectDir, { recursive: true })\n                   fs.mkdirSync(storyDir, { recursive: true })\n                   let filename = `${storyDir}/${story.id}-Story.pdf`\n                   let storyJson = `${storyDir}/${story.id}.json`\n\n                   fs.writeFileSync(storyJson, JSON.stringify(story))\n\n                   storyData[\"owner\"] = members[story.ownedById] ? members[story.ownedById].username : 'unknown'\n                    if(comments.length > 0){\n\n                      for(let k=0; k<comments.length; k++){\n                        let comment={}\n                        comment[\"text\"] = comments[k].text\n                        comment[\"storyId\"] = comments[k].storyId\n                        comment[\"imagePath\"] = []\n                        comment[\"commentBy\"] = members[comments[k].personId] ? members[comments[k].personId].username : \"unknown\"\n                        comment[\"email\"] = members[comments[k].personId] ? members[comments[k].personId].email : \"unknown\"\n\n                        if(comments[k].fileAttachments.length > 0){\n\n                          for(let l=0; l<comments[k].fileAttachments.length; l++){\n                            try {\n                              const res = donwloadFileSync(comments[k].fileAttachments[l], storyDir)\n                              if(comments[k].fileAttachments[l].contentType.indexOf('image') !== -1){\n                                comment.imagePath.push(res)\n                              }\n                            } catch (error) {\n                              console.log(\"fileAttachment download failed for some reason\")\n                            }\n                          }\n                        }\n                        storyData.comments.push(comment)\n                      }\n\n                    }\n                   createPDF(filename, storyData)\n               }\n          } else  console.log(\"story Id is missing\")\n        }\n    }else  console.log(\"Project Id is missing\")\n  }\n}\n\nconst members = {}\n\nfunction getprojects(){\n  client.projects.all(function(error, projects) {\n      if(error){\n        console.log(\"error in all project fetch\")\n        console.log(error)\n      }else{\n        extractAllData(projects)\n      }\n    });\n}\n\nexport const getAllPivotTrackerData =  () => {\n  client.account(888851).memberships.all(function(error, memberships) {\n    if (error) {\n        console.log(error);\n    }\n    else {\n        memberships.forEach(member => {\n          members[member.id] = {\n            name: member.name,\n            email: member.email\n          }\n        })\n        getprojects()\n    }\n  });\n}\n\nexport default getAllPivotTrackerData\n"]}