{"version":3,"sources":["../src/getAllPivotTrackerData.js"],"names":["getAllStoriesArray","projectId","retries","Promise","resolve","reject","client","project","stories","all","error","code","iterateOverAllStories","storyId","story","get","getCommentsOfstory","comments","createPDF","filename","storyData","doc","PDFDocument","pipe","fs","createWriteStream","fontSize","text","moveDown","name","description","createdAt","length","console","log","id","addPage","i","end","extractAllData","projects","then","j","undefined","baseDir","projectDir","storyDir","mkdirSync","recursive","storyJson","writeFileSync","JSON","stringify","catch","e","getAllPivotTrackerData"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEC,SAASA,kBAAT,CAA4BC,SAA5B,EAAiD;AAAA,MAAVC,OAAU,uEAAF,CAAE;;AAChD,SAAO,IAAIC,iBAAJ,CAAY,UAAUC,OAAV,EAAkBC,MAAlB,EAA0B;AAC3CC,kBAAOC,OAAP,CAAeN,SAAf,EAA0BO,OAA1B,CAAkCC,GAAlC,CAAsC,UAAUC,KAAV,EAAgBF,OAAhB,EAAyB;AAC7D,UAAGE,UAAUA,MAAMC,IAAN,KAAe,WAAf,IAA8BD,MAAMC,IAAN,KAAe,YAAvD,KAAwET,UAAU,CAArF,EAAuF;AACrFF,2BAAmBC,SAAnB,EAA8BC,UAAQ,CAAtC;AACD,OAFD,MAEM,IAAG,CAACQ,KAAJ,EAAU;AACdN,gBAAQI,OAAR;AACD,OAFK,MAGF;AACFH,eAAOK,KAAP;AACD;AACF,KATD;AAUD,GAXM,CAAP;AAYD;;AAED,SAASE,qBAAT,CAA+BX,SAA/B,EAA0CY,OAA1C,EAA6D;AAAA,MAAVX,OAAU,uEAAF,CAAE;;AAC3D,SAAO,IAAIC,iBAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACrCC,kBAAOC,OAAP,CAAeN,SAAf,EAA0Ba,KAA1B,CAAgCD,OAAhC,EAAyCE,GAAzC,CAA6C,UAASL,KAAT,EAAgBI,KAAhB,EAAuB;AAClE,UAAGJ,UAAUA,MAAMC,IAAN,KAAe,WAAf,IAA8BD,MAAMC,IAAN,KAAe,YAAvD,KAAwET,UAAU,CAArF,EAAuF;AACrFF,2BAAmBC,SAAnB,EAA8BC,UAAQ,CAAtC;AACD,OAFD,MAEM,IAAG,CAACQ,KAAJ,EAAU;AACdN,gBAAQU,KAAR;AACD,OAFK,MAGF;AACFT,eAAOK,KAAP;AACD;AACJ,KATC;AAUD,GAXM,CAAP;AAYD;;AAED,SAASM,kBAAT,CAA4Bf,SAA5B,EAAsCY,OAAtC,EAAyD;AAAA,MAAVX,OAAU,uEAAF,CAAE;;AACvD,SAAO,IAAIC,iBAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACrCC,kBAAOC,OAAP,CAAeN,SAAf,EAA0Ba,KAA1B,CAAgCD,OAAhC,EAAyCI,QAAzC,CAAkDR,GAAlD,CAAsD,UAASC,KAAT,EAAgBO,QAAhB,EAA0B;AAC9E,UAAGP,UAAUA,MAAMC,IAAN,KAAe,WAAf,IAA8BD,MAAMC,IAAN,KAAe,YAAvD,KAAwET,UAAU,CAArF,EAAuF;AACrFF,2BAAmBC,SAAnB,EAA8BC,UAAQ,CAAtC;AACD,OAFD,MAEM,IAAG,CAACQ,KAAJ,EAAU;AACdN,gBAAQa,QAAR;AACD,OAFK,MAGF;AACFZ,eAAOK,KAAP;AACD;AACJ,KATC;AAUD,GAXM,CAAP;AAYD;;AAED,SAASQ,SAAT,CAAmBC,QAAnB,EAA6BC,SAA7B,EAAuC;AACrC,MAAMC,MAAM,IAAIC,gBAAJ,EAAZ;AACAD,MAAIE,IAAJ,CAASC,aAAGC,iBAAH,CAAqBN,QAArB,CAAT;;AAEAE,MACCK,QADD,CACU,EADV,EAECC,IAFD,CAEM,OAFN;;AAIAN,MAAIO,QAAJ;AACAP,MACCK,QADD,CACU,EADV,EAECC,IAFD,CAEMP,UAAUN,KAAV,CAAgBe,IAFtB;;AAIAR,MAAIO,QAAJ;AACAP,MACCK,QADD,CACU,EADV,EAECC,IAFD,sBAEyBP,UAAUN,KAAV,CAAgBgB,WAFzC;;AAIAT,MAAIO,QAAJ;AACAP,MACCK,QADD,CACU,EADV,EAECC,IAFD,oBAEuBP,UAAUN,KAAV,CAAgBiB,SAFvC;;AAIAV,MAAIO,QAAJ;AACAP,MACCK,QADD,CACU,EADV,EAECC,IAFD,oBAEuBP,UAAUN,KAAV,CAAgBb,SAFvC;;AAIE,MAAGmB,UAAUH,QAAV,CAAmBe,MAAnB,GAA4B,CAA/B,EAAiC;AAC/BC,YAAQC,GAAR,CAAY,aAAZ,EAA4Bd,UAAUN,KAAV,CAAgBqB,EAA5C;AACAd,QACCe,OADD,GAECV,QAFD,CAEU,EAFV,EAGCC,IAHD;AAIA,SAAI,IAAIU,IAAE,CAAV,EAAaA,IAAEjB,UAAUH,QAAV,CAAmBe,MAAlC,EAA0CK,GAA1C,EAA+C;AAC7ChB,UAAIO,QAAJ;AACAP,UACCK,QADD,CACU,EADV,EAECC,IAFD,iBAEoBP,UAAUH,QAAV,CAAmBoB,CAAnB,EAAsBV,IAF1C;AAGD;AACF;;AAEHN,MAAIiB,GAAJ;AACD;;AAED,SAASC,cAAT,CAAwBC,QAAxB,EAAiC;AAC/BP,UAAQC,GAAR,CAAY,oBAAZ,EAAiCM,SAASR,MAA1C;;AAD+B,6BAEvBK,CAFuB;AAG7B,QAAGG,SAASH,CAAT,EAAYF,EAAZ,KAAmB,IAAtB,EAA2B;AAC1BnC,yBAAmBwC,SAASH,CAAT,EAAYF,EAA/B,EACEM,IADF,CACO,UAACjC,OAAD,EAAW;AACfyB,gBAAQC,GAAR,cAAuBM,SAASH,CAAT,EAAYF,EAAnC,mBAAmD3B,QAAQwB,MAA3D;;AADe,qCAEPU,CAFO;AAGb,cAAGlC,QAAQkC,CAAR,EAAWP,EAAX,KAAkB,IAAlB,IAA0B3B,QAAQkC,CAAR,EAAWP,EAAX,KAAkBQ,SAA/C,EAAyD;AACrD/B,kCAAsB4B,SAASH,CAAT,EAAYF,EAAlC,EAAsC3B,QAAQkC,CAAR,EAAWP,EAAjD,EACDM,IADC,CACK,iBAAS;AACd,kBAAG3B,SAASA,MAAMqB,EAAN,KAAa,IAAtB,IAA8BrB,MAAMqB,EAAN,KAAaQ,SAA9C,EAAwD;AACpD3B,mCAAmBwB,SAASH,CAAT,EAAYF,EAA/B,EAAmC3B,QAAQkC,CAAR,EAAWP,EAA9C,EACCM,IADD,CACO,oBAAY;AAClB,sBAAIrB,YAAY,EAAhB;AACAA,4BAAUN,KAAV,GAAkBA,KAAlB;AACAM,4BAAUH,QAAV,GAAqBA,QAArB;AACA,sBAAI2B,UAAU,mBAAd;AACA,sBAAIC,aAAgBD,OAAhB,SAA2BJ,SAASH,CAAT,EAAYF,EAAvC,SAA6CK,SAASH,CAAT,EAAYR,IAA7D;AACA,sBAAIiB,WAAcD,UAAd,SAA4BrC,QAAQkC,CAAR,EAAWP,EAA3C;AACAX,+BAAGuB,SAAH,CAAaF,UAAb,EAAyB,EAAEG,WAAW,IAAb,EAAzB;AACAxB,+BAAGuB,SAAH,CAAaD,QAAb,EAAuB,EAAEE,WAAW,IAAb,EAAvB;AACA,sBAAI7B,WAAc2B,QAAd,SAA0BtC,QAAQkC,CAAR,EAAWP,EAArC,SAAJ;AACA,sBAAIc,YAAeH,QAAf,SAA2BtC,QAAQkC,CAAR,EAAWP,EAAtC,UAAJ;AACAjB,4BAAUC,QAAV,EAAmBC,SAAnB;AACAI,+BAAG0B,aAAH,CAAiBD,SAAjB,EAA4BE,KAAKC,SAAL,CAAetC,KAAf,CAA5B;AACD,iBAdA,EAeAuC,KAfA,CAeM;AAAA,yBAAKpB,QAAQC,GAAR,CAAYoB,CAAZ,CAAL;AAAA,iBAfN;AAgBH;AACF,aApBC,EAqBDD,KArBC,CAqBK;AAAA,qBAAKpB,QAAQC,GAAR,CAAYoB,CAAZ,CAAL;AAAA,aArBL;AAsBH,WAvBD,MAuBQrB,QAAQC,GAAR,CAAY,qBAAZ;AA1BK;;AAEf,aAAI,IAAIQ,IAAE,CAAV,EAAaA,IAAElC,QAAQwB,MAAvB,EAA+BU,GAA/B,EAAmC;AAAA,iBAA3BA,CAA2B;AAyBlC;AACF,OA7BF,EA8BEW,KA9BF,CA8BQ;AAAA,eAAKpB,QAAQC,GAAR,CAAYoB,CAAZ,CAAL;AAAA,OA9BR;AA+BA,KAhCD,MAgCOrB,QAAQC,GAAR,CAAY,uBAAZ;AAnCsB;;AAE/B,OAAI,IAAIG,IAAE,CAAV,EAAaA,IAAEG,SAASR,MAAxB,EAAgCK,GAAhC,EAAoC;AAAA,UAA5BA,CAA4B;AAkCnC;AACF;;AAEM,IAAMkB,0DAA0B,SAA1BA,sBAA0B,GAAM;AAC3CjD,gBAAOkC,QAAP,CAAgB/B,GAAhB,CAAoB,UAASC,KAAT,EAAgB8B,QAAhB,EAA0B;AAC5C,QAAG9B,KAAH,EAAS;AACPuB,cAAQC,GAAR,CAAY,4BAAZ;AACAD,cAAQC,GAAR,CAAYxB,KAAZ;AACD,KAHD,MAGK;AACH6B,qBAAeC,QAAf;AACD;AACJ,GAPC;AASD,CAVM;;kBAYQe,sB","file":"getAllPivotTrackerData.js","sourcesContent":["import  Promise from 'promise'\nimport fs from 'fs'\nimport { client } from './index'\nimport PDFDocument from 'pdfkit'\n\n function getAllStoriesArray(projectId, retries=5){\n  return new Promise(function (resolve,reject) {\n    client.project(projectId).stories.all(function (error,stories) {\n      if(error && (error.code === \"ETIMEDOUT\" || error.code === \"ECONNRESET\") && retries > 0){\n        getAllStoriesArray(projectId, retries-1)\n      }else if(!error){\n        resolve(stories)\n      }\n      else{\n        reject(error)\n      }\n    })\n  })\n}\n\nfunction iterateOverAllStories(projectId, storyId, retries=5){\n  return new Promise((resolve,reject) => {\n    client.project(projectId).story(storyId).get(function(error, story) {\n      if(error && (error.code === \"ETIMEDOUT\" || error.code === \"ECONNRESET\") && retries > 0){\n        getAllStoriesArray(projectId, retries-1)\n      }else if(!error){\n        resolve(story)\n      }\n      else{\n        reject(error)\n      }\n  });\n  })\n}\n\nfunction getCommentsOfstory(projectId,storyId, retries=5){\n  return new Promise((resolve,reject) => {\n    client.project(projectId).story(storyId).comments.all(function(error, comments) {\n      if(error && (error.code === \"ETIMEDOUT\" || error.code === \"ECONNRESET\") && retries > 0){\n        getAllStoriesArray(projectId, retries-1)\n      }else if(!error){\n        resolve(comments)\n      }\n      else{\n        reject(error)\n      }\n  });\n  })\n}\n\nfunction createPDF(filename, storyData){\n  const doc = new PDFDocument()\n  doc.pipe(fs.createWriteStream(filename))\n\n  doc\n  .fontSize(20)\n  .text(\"Story\")\n\n  doc.moveDown();\n  doc\n  .fontSize(32)\n  .text(storyData.story.name)\n\n  doc.moveDown();\n  doc\n  .fontSize(25)\n  .text(`Description  -> ${storyData.story.description}`)\n\n  doc.moveDown()\n  doc\n  .fontSize(25)\n  .text(`Created at -> ${storyData.story.createdAt}`)\n\n  doc.moveDown()\n  doc\n  .fontSize(25)\n  .text(`Project ID -> ${storyData.story.projectId}`)\n\n    if(storyData.comments.length > 0){\n      console.log(\"story id ->\",  storyData.story.id)\n      doc\n      .addPage()\n      .fontSize(27)\n      .text(`Comments`)\n      for(let i=0; i<storyData.comments.length; i++ ){\n        doc.moveDown()\n        doc\n        .fontSize(25)\n        .text(`Comment -> ${storyData.comments[i].text} `)\n      }\n    }\n\n  doc.end();\n}\n\nfunction extractAllData(projects){\n  console.log(\"Total projects -> \",projects.length)\n  for(let i=0; i<projects.length; i++){\n    if(projects[i].id !== null){\n     getAllStoriesArray(projects[i].id)\n      .then((stories)=>{\n        console.log(`Project ${projects[i].id} has total ${stories.length} stories`)\n        for(let j=0; j<stories.length; j++){\n          if(stories[j].id !== null && stories[j].id !== undefined){\n              iterateOverAllStories(projects[i].id, stories[j].id)\n            .then( story => {\n              if(story && story.id !== null && story.id !== undefined){\n                  getCommentsOfstory(projects[i].id, stories[j].id)\n                  .then( comments => {\n                   let storyData = {}\n                   storyData.story = story\n                   storyData.comments = comments\n                   let baseDir = 'pivoteTrackerData'\n                   let projectDir = `${baseDir}/${projects[i].id}-${projects[i].name}`\n                   let storyDir = `${projectDir}/${stories[j].id}`\n                   fs.mkdirSync(projectDir, { recursive: true })\n                   fs.mkdirSync(storyDir, { recursive: true })\n                   let filename = `${storyDir}/${stories[j].id}.pdf`\n                   let storyJson = `${storyDir}/${stories[j].id}.json`\n                   createPDF(filename,storyData)\n                   fs.writeFileSync(storyJson, JSON.stringify(story));\n                 })\n                 .catch(e => console.log(e))\n              }\n            })\n            .catch(e => console.log(e))\n          } else  console.log(\"story Id is missing\")\n        }\n      })\n      .catch(e => console.log(e))\n    }else  console.log(\"Project Id is missing\")\n  }\n}\n\nexport const getAllPivotTrackerData =  () => {\n  client.projects.all(function(error, projects) {\n    if(error){\n      console.log(\"error in all project fetch\")\n      console.log(error)\n    }else{\n      extractAllData(projects)\n    }\n});\n\n}\n\nexport default getAllPivotTrackerData\n"]}